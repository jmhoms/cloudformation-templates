AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Nextcloud All-in-One on a Spot instance:
    - EFS for persistent data
    - Automatic EIP reassignment for stable public IP
    - Two separate security groups (EC2 vs. EFS)
    - Narrow IAM policy for only ec2:AssociateAddress, efs:ClientMount, etc.
    - IMDSv2 for retrieving INSTANCE_ID
    - "lowest-price" Spot allocation strategy

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID to deploy into
  SubnetId1:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet #1 (AZ1) for the Spot instance and EFS mount target
  SubnetId2:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet #2 (AZ2) for redundancy
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Key Pair for SSH access
  InstanceType:
    Type: String
    Default: t3.small
    Description: EC2 Spot instance type
  DesiredCapacity:
    Type: Number
    Default: 1
    Description: How many Nextcloud AIO instances to run on Spot
  MaxCapacity:
    Type: Number
    Default: 1
    Description: Maximum number of instances

Mappings:
  # Update with valid Ubuntu or other AMI in your region
  RegionMap:
    eu-west-1:
      AMI: "ami-0c55b159cbfafe1f0"  # Example Ubuntu 22.04 for eu-west-1
    us-east-1:
      AMI: "ami-0b0dcb5067f052a63"
    # Add additional regions as needed

Resources:
  ####################################################
  # 1) Security Groups
  ####################################################

  NextcloudInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Nextcloud Instance SG (allow 80/443 inbound)
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # HTTP from anywhere
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # HTTPS from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        # Allow all outbound
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  NextcloudEFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EFS SG (allow NFS only from EC2 SG)
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # Inbound 2049 from the instance SG
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref NextcloudInstanceSecurityGroup
      SecurityGroupEgress:
        # Allow all outbound
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  ####################################################
  # 2) EFS Filesystem & Mount Targets
  ####################################################
  NextcloudEFS:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: NextcloudEFS

  NextcloudEFSMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref NextcloudEFS
      SubnetId: !Ref SubnetId1
      SecurityGroups:
        - !Ref NextcloudEFSSecurityGroup

  NextcloudEFSMountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref NextcloudEFS
      SubnetId: !Ref SubnetId2
      SecurityGroups:
        - !Ref NextcloudEFSSecurityGroup

  ####################################################
  # 3) Elastic IP (EIP)
  ####################################################
  NextcloudEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NextcloudEIP

  ####################################################
  # 4) IAM Role & Minimal Policy
  ####################################################
  NextcloudRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"

  NextcloudPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NextcloudEC2EFSAccess
      Roles:
        - !Ref NextcloudRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Let the instance reattach the EIP
          - Effect: Allow
            Action:
              - ec2:AssociateAddress
              - ec2:DisassociateAddress
            Resource: '*'

          # Minimal EFS Client Access
          - Effect: Allow
            Action:
              - efs:ClientMount
              - efs:ClientRootAccess
              - efs:DescribeMountTargets
            Resource: '*'

  NextcloudInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref NextcloudRole

  ####################################################
  # 5) Launch Template (with IMDSv2 user data)
  ####################################################
  NextcloudLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DependsOn:
      - NextcloudEFS
      - NextcloudEIP
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt NextcloudInstanceProfile.Arn
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref NextcloudInstanceSecurityGroup
        MetadataOptions:
          HttpTokens: required
          HttpEndpoint: enabled
          HttpPutResponseHopLimit: 2
        UserData:
          Fn::Base64:
            Fn::Sub:
              - |
                #!/bin/bash
                set -euxo pipefail

                exec > /var/log/user-data.log 2>&1

                # 1) Retrieve IMDSv2 token for instance ID
                TOKEN=$(curl -X PUT -s -H "X-aws-ec2-metadata-token-ttl-seconds: 21600" http://169.254.169.254/latest/api/token || true)
                if [ -n "$TOKEN" ]; then
                  INSTANCE_ID=$(curl -s -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/instance-id)
                else
                  # fallback to IMDSv1 if it's optional
                  INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
                fi
                echo "Retrieved INSTANCE_ID as $INSTANCE_ID"

                # 2) Install Docker & AWS CLI
                apt-get update -y
                snap install aws-cli --classic

                apt-get install -y ca-certificates curl gnupg nfs-common
                install -m 0755 -d /etc/apt/keyrings
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc > /dev/null
                chmod a+r /etc/apt/keyrings/docker.asc
                echo "deb [signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
                apt-get update -y
                apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

                systemctl enable docker
                systemctl start docker

                # 3) Associate the Elastic IP to this instance
                aws ec2 associate-address \
                  --allocation-id ${EIPAllocationId} \
                  --instance-id "$INSTANCE_ID" \
                  --region ${AWS::Region} \
                  --allow-reassociation

                # 4) Mount EFS
                mkdir -p /mnt/nextcloud
                echo "${EFSId}.efs.${AWS::Region}.amazonaws.com:/ /mnt/nextcloud nfs4 defaults 0 0" >> /etc/fstab
                mount -a || echo "Warning: EFS mount attempt failed. Check logs."

                # 5) Run Nextcloud All-in-One container
                docker run \
                  --restart always \
                  -d \
                  --name nextcloud-aio-mastercontainer \
                  -p 80:80 \
                  -p 443:443 \
                  -e NEXTCLOUD_DATADIR="/mnt/nextcloud" \
                  -v nextcloud_aio_mastercontainer:/mnt/docker-aio-config \
                  --privileged \
                  nextcloud/all-in-one:latest
              - {
                  EIPAllocationId: !GetAtt NextcloudEIP.AllocationId,
                  EFSId: !Ref NextcloudEFS
                }
      VersionDescription: NextcloudAIO
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: NextcloudAIO

  ####################################################
  # 6) Auto Scaling Group (Spot)
  ####################################################
  NextcloudASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref SubnetId1
        - !Ref SubnetId2
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandAllocationStrategy: "lowest-price"
          OnDemandBaseCapacity: 0
          SpotAllocationStrategy: "lowest-price"
          SpotInstancePools: 2
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref NextcloudLaunchTemplate
            Version: !GetAtt NextcloudLaunchTemplate.LatestVersionNumber
          Overrides: []
      MinSize: 0
      DesiredCapacity: !Ref DesiredCapacity
      MaxSize: !Ref MaxCapacity
      Tags:
        - Key: Name
          Value: NextcloudAIO
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT0S
        MaxBatchSize: 1
        MinInstancesInService: 0

Outputs:
  EFSFileSystemId:
    Description: EFS FileSystem ID
    Value: !Ref NextcloudEFS

  NextcloudASGName:
    Description: Auto Scaling Group Name
    Value: !Ref NextcloudASG

  NextcloudEIPAllocationId:
    Description: Allocation ID of the EIP
    Value: !GetAtt NextcloudEIP.AllocationId
